from init import simulation_saved, simulation, simulation_network
from src.utils.geneticAlg import GeneticAlgorithm
from src.agent.network import NetworkFromWeights, NetworkFromWeights_2
from init.utils.utils import _init_GUI
import warnings


# Filter out specific UserWarning regarding the use of `.T` on tensors
warnings.filterwarnings("ignore",
                        message="The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release.")

import os
os.environ['PYGAME_HIDE_SUPPORT_PROMPT'] = '1'

delta_t = 1
track = False
num_landmarks = 0
num_sensor = 8
sensor_length = 100

# initialize
# win, environment_surface, agent, font, env = _init_GUI(num_landmarks,
#                                                        num_sensor,
#                                                        sensor_length)
#
# simulation.run_simulation(delta_t,
#                           track,
#                           "tracker",
#                           agent,
#                           win,
#                           environment_surface,
#                           env,
#                           font)


########################################################################################################################

#Parameters
params = {
    "POP_SIZE": 200,
    "CHROMOSOME_LENGTH": 274*5,
    "GEN_MAX": 100,
    "SELECTION_PARAM": {
        "type": "roulette",
        "num_individuals": 30,
        "tournament_size": 10
    },
    "MUTATION_PARAM": {
        "type": "uniform",
        "rate": 0.01
    },
    "CROSSOVER_PARAM": {
        "type": "uniform"
    }
}


# def main():
#     # Your existing code that initializes and starts the genetic algorithm
#     genAlg = GeneticAlgorithm(**params)
#     genAlg.genetic_algorithm()
#
#
# if __name__ == '__main__':
#     # This line is critical for multiprocessing under Windows
#     from multiprocessing import freeze_support
#
#     freeze_support()
#     main()

########################################################################################################################

# Run the network simulation

# Large
# MaZe


# Standard


# Medium


# Small
# Standard

# Maze

chromosome

network = NetworkFromWeights_2(chromosome, v_max=10.0)
# Run simulation
win, environment_surface, agent, font, env = _init_GUI(num_landmarks,
                                                       num_sensor,
                                                       sensor_length)

max_time_steps = 1000000
dust_remains = simulation_network.run_network_simulation(delta_t,
                                                         max_time_steps,
                                                         network,
                                                         agent,
                                                         win,
                                                         environment_surface,
                                                         env,
                                                         font,
                                                         True)

print(f"Dust remains: {dust_remains}")
